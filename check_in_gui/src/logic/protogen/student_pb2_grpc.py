# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import logic.protogen.student_pb2 as student__pb2


class StudentStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CodeCheckIn = channel.unary_unary(
                '/student.Student/CodeCheckIn',
                request_serializer=student__pb2.CodeCheckInRequest.SerializeToString,
                response_deserializer=student__pb2.CodeCheckInResponse.FromString,
                )
        self.GetStats = channel.unary_unary(
                '/student.Student/GetStats',
                request_serializer=student__pb2.GetStatsRequest.SerializeToString,
                response_deserializer=student__pb2.GetStatsResponse.FromString,
                )
        self.GetAllStudents = channel.unary_unary(
                '/student.Student/GetAllStudents',
                request_serializer=student__pb2.GetAllStudentsRequest.SerializeToString,
                response_deserializer=student__pb2.GetAllStudentsResponse.FromString,
                )


class StudentServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CodeCheckIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllStudents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StudentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CodeCheckIn': grpc.unary_unary_rpc_method_handler(
                    servicer.CodeCheckIn,
                    request_deserializer=student__pb2.CodeCheckInRequest.FromString,
                    response_serializer=student__pb2.CodeCheckInResponse.SerializeToString,
            ),
            'GetStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStats,
                    request_deserializer=student__pb2.GetStatsRequest.FromString,
                    response_serializer=student__pb2.GetStatsResponse.SerializeToString,
            ),
            'GetAllStudents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllStudents,
                    request_deserializer=student__pb2.GetAllStudentsRequest.FromString,
                    response_serializer=student__pb2.GetAllStudentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'student.Student', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Student(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CodeCheckIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/student.Student/CodeCheckIn',
            student__pb2.CodeCheckInRequest.SerializeToString,
            student__pb2.CodeCheckInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/student.Student/GetStats',
            student__pb2.GetStatsRequest.SerializeToString,
            student__pb2.GetStatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllStudents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/student.Student/GetAllStudents',
            student__pb2.GetAllStudentsRequest.SerializeToString,
            student__pb2.GetAllStudentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
